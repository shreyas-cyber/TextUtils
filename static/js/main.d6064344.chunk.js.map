{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6064344.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-secondary\" type=\"submit\">Search</button>\r\n  </form> */}\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"Title here\",\r\n  aboutText: \"About\"\r\n}","\r\nimport React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleonchange = (event) => {\r\n        console.log(\"Changed\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied!\",\"success\")\r\n    }\r\n    // const handleExtraSpace = () => {\r\n    //     let newText = text.split(/[ ]+/);\r\n    //     setText(newText.join[\" \"])\r\n    // }\r\n    const handleUpperCase = () => {\r\n        // console.log(\"Clicked Up\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case!\",\"success\")\r\n    }\r\n    const handleLowerCase = () => {\r\n        // console.log(\"Clicked Up\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case!\",\"success\")\r\n    }\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\",\"success\")\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    // text=\"New text\";//Wrong way to use state\r\n    // setText(\"New text\")//correct way\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode===\"light\"?\"#25464c\":\"white\"}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode===\"light\"?\"white\":\"grey\",color:props.mode===\"light\"?\"#25464c\":\"white\"}} onChange={handleonchange}\r\n                        id=\"myBox\" rows=\"10\"></textarea>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleUpperCase}>Convert to UpperCase</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleLowerCase}>Convert to LowerCase</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleClear}>Clear Text</button>\r\n                    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleCopy}>Copy Text</button>\r\n                    {/* <button className=\"btn btn-primary my-3 mx-2\" onClick={handleExtraSpace}>Remove Extra Space</button> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-1\" style={{color:props.mode===\"light\"?\"#25464c\":\"white\"}}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length - 1} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter your text to preview\"}</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Whether dark mode is enabled or not\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"#25464c\";\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = \"TextUtils-Dark Mode\"\n    } else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = \"TextUtils-Light Mode\"\n    }\n  }\n  return (\n    <>\n      {/* <Navbar/> */}\n      {/* <Navbar title=\"TextUtilsBlog\" aboutText=\"About Us\"/> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtilsBlog\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n          {/* </Route>\n        </Switch> */}\n        <div className=\"container my-3\">\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}